{"version":3,"sources":["store/translations/translationsSlice.js","store/strategy/strategySlice.service.js","utils/status.js","store/strategy/strategySlice.js","store/index.js","components/NumberedCard/index.js","containers/Strategy/AssetsSelector/TickersForm/index.js","containers/Strategy/AssetsSelector/index.js","utils/functions/index.js","components/Spinner/index.js","utils/fetch/index.js","services/apis/marketstack/index.js","services/mappers/marketstack/index.js","services/domain/analyse/index.js","containers/Strategy/AssetsAnalyzer/AnalyseViewer/DmaReportViewer/index.js","containers/Strategy/AssetsAnalyzer/AnalyseViewer/index.js","containers/Strategy/AssetsAnalyzer/index.js","containers/Footer/index.js","views/Strategy/index.js","containers/TickerAnalyse/TickerAnalyseForm/index.js","containers/TickerAnalyse/TickerAnalyseVisualisation/index.js","views/TickerAnalyse/index.js","containers/Topbar/index.js","App.js","utils/translations/index.js","index.js"],"names":["translationsSlice","createSlice","name","initialState","reducers","setTranslations","state","action","messages","payload","actions","STRATEGY_TYPE","ASSET_TYPE","Strategies","Map","strategy","tickers","analyse","preconisation","undefined","status","STATUS","userStrategySlice","changeSelectedStrategy","addSelection","addAssetAnalyse","setAnalyseLoading","setPreconisation","rootReducer","combineReducers","userStrategy","userStrategyReducer","translations","translationsReducer","NumberedCard","number","children","className","TickersForm","intl","useIntl","dispatch","useDispatch","useForm","register","handleSubmit","useSelector","onSubmit","event","get","map","asset","formatMessage","id","type","placeholder","ref","required","AssetsSelector","value","onChange","e","target","isAnEmptyObject","obj","Object","keys","length","getDateWithMonthAgo","today","monthAgo","monthsToSubstract","dateWithMonthAgo","Date","getFullYear","getMonth","setDate","Math","min","getDate","dateTimeToDate","dateTime","toISOString","slice","sleep","milliseconds","Promise","resolve","setTimeout","Spinner","viewBox","cx","cy","r","fill","strokeWidth","urlConstructor","baseUrl","apiEndpoint","queryParams","URLSearchParams","handleJSONResponse","response","ok","json","Error","getMarketData","symbol","from","to","a","urlConfig","access_key","process","symbols","date_from","date_to","limit","fetch","method","then","catch","err","console","error","getPerformance","marketData","data","close","open","getTickerPerformance","ticker","date","getAssetWithAnalyse","assetToFind","assetWithInformations","forEach","assetAnalyse","DmaReportViewer","useEffect","us","exUs","bond","tips","mostInterestingStockAsset","avg","mostInterestingSafeAsset","assetElements","toFixed","AnalyseViewer","AssetsAnalyzer","handleLaunchAnalyse","sixMonthAgo","threeMonthAgo","aMonthAgo","sixMonthAgoPerf","threeMonthAgoPerf","aMonthAgoPerf","1","3","6","loadDMAAnalyse","onClick","Footer","Strategy","TickerAnalyseForm","setAnalyse","first","last","performance","TickerAnalyseVisualisation","toDateString","high","low","volume","TickerAnalyse","useState","Topbar","alt","src","App","window","location","href","headers","Accept","flatten","locale","defaultLocale","path","store","configureStore","reducer","devTools","ReactDOM","render","document","getElementById"],"mappings":"qYAEMA,EAAoBC,YAAY,CAClCC,KAAM,eACNC,aAAc,GACdC,SAAU,CACNC,gBADM,SACUC,EAAOC,GACnB,OAAO,2BAAID,GAAX,IAAkBE,SAAUD,EAAOE,cAM3CJ,EACAL,EAAkBU,QADlBL,gBAEWL,IAAf,Q,OCfaW,EACN,MADMA,EAEA,YAFAA,EAGA,YAHAA,EAIP,KAGOC,EACE,cADFA,EAEE,cAFFA,EAGL,OAHKA,EAIA,YAJAA,EAKG,eALHA,EAYe,2BAZfA,EAac,0BAbdA,EAcM,kBAdNA,EAoBL,OAGKC,EAAa,IAAIC,IAAI,CAChC,CAACH,EAAoB,CACnBC,EACAA,EACAA,EACAA,IAEF,CAACD,EAAyB,CACxBC,EACAA,EACAA,EA1BuB,0BACA,0BAEA,0BACA,0BA2BvBA,EACAA,EACAA,EAzBwB,2BACV,iBAEC,oBA2BjB,CAACD,EAA0B,CAvCT,mBAGA,mBAuChBC,EACAA,EACAA,EACAA,EACAA,EAnCgB,mBAqChBA,IAEF,CAACD,EAAmB,CAClBC,EACAA,EACAA,EACAA,EACAA,EA1CgB,uBA+CPT,EAAe,CAC1BY,SAAUJ,EACVK,QAAS,GACTC,QAAS,GACTC,mBAAgBC,EAChBC,YAAQD,GC9EGE,EACL,cADKA,EAEJ,eAFIA,EAGF,iBCCLC,EAAoBrB,YAAY,CACpCC,KAAM,eACNC,aAAcA,EACdC,SAAU,CACRmB,uBADQ,SACejB,EAAOC,GAC5B,OAAO,2BAAID,GAAX,IAAkBS,SAAUR,EAAOE,WAErCe,aAJQ,SAIKlB,EAAOC,GAClB,OAAO,2BAAID,GAAX,IAAkBU,QAAQ,eAAKT,EAAOE,YAExCgB,gBAPQ,SAOQnB,EAAOC,GACrB,OAAO,2BAAID,GAAX,IAAkBW,QAAQ,GAAD,mBAAOX,EAAMW,SAAb,gBAA0BV,EAAOE,WAAWW,OAAQC,KAE/EK,kBAVQ,SAUUpB,GAChB,OAAO,2BAAIA,GAAX,IAAkBc,OAAQC,KAE5BM,iBAbQ,SAaSrB,EAAOC,GACtB,OAAO,2BAAID,GAAX,IAAkBY,cAAeX,EAAOE,c,EAW1Ca,EAAkBZ,QALpBc,E,EAAAA,aACAD,E,EAAAA,uBACAE,E,EAAAA,gBACAC,E,EAAAA,kBACAC,E,EAAAA,iBAEaL,IAAf,QCxBeM,EALKC,YAAgB,CAChCC,aAAcC,EACdC,aAAcC,ICMHC,G,MATM,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAC3B,OACI,sBAAKC,UAAU,gBAAf,UACI,yBAASA,UAAU,SAAnB,SAA6BF,IAC7B,kCAAUC,S,gBC0BPE,G,MAzBK,WAAO,IAAD,EAChBC,EAAOC,cACPC,EAAWC,cAFK,EAGaC,cAA3BC,EAHc,EAGdA,SAAUC,EAHI,EAGJA,aACZf,EAAegB,aAAY,SAAAxC,GAAK,OAAIA,EAAMwB,gBAKhD,OACI,uBAAMO,UAAU,eAAeU,SAAUF,GAJrB,SAACG,GACrBP,EAASjB,EAAawB,OAGtB,UACI,qFACA,qBAAKX,UAAU,UAAf,mBACKxB,EAAWoC,IAAInB,EAAaf,SAAW,WAD5C,aACK,EAA4CmC,KAAI,SAAAC,GAC7C,OAAO,gCACH,4BAAIZ,EAAKa,cAAc,CAACC,GAAI,UAAYF,MACxC,uBAAOG,KAAK,OAAOpD,KAAMiD,EAAQ,GAAII,YAAY,MAAMC,IAAKZ,EAAS,CAAEa,UAAU,QAFpEN,QAMzB,wBAAQG,KAAK,SAAb,0BCSGI,G,MA7BQ,WACnB,IAAMjB,EAAWC,cACXZ,EAAegB,aAAY,SAACxC,GAAD,OAAWA,EAAMwB,gBAMlD,OACI,sBAAKO,UAAU,kBAAf,UACI,eAAC,EAAD,CAAcF,OAAQ,EAAtB,UACI,gEACA,yBAAQjC,KAAK,UAAUyD,MAAO7B,EAAaf,SAAW,GAAI6C,SAAU,SAACC,GAP7EpB,EAASlB,EAO+FsC,EAPlEC,OAAOH,SAOrC,UACI,wBAAQA,MAAOhD,EAAf,SAAmCA,IACnC,wBAAQgD,MAAOhD,EAAf,SAAyCA,IACzC,wBAAQgD,MAAOhD,EAAf,SAAyCA,IACzC,wBAAQgD,MAAOhD,EAAf,SAAkCA,UAI1C,cAAC,EAAD,CAAcwB,OAAQ,EAAtB,SACI,cAAC,EAAD,WCzBH4B,EAAkB,SAACC,GAC5B,OAAOA,GAAmC,IAA5BC,OAAOC,KAAKF,GAAKG,QAGtBC,EAAsB,SAACC,EAAOC,GACvC,IAAMC,EAAoBD,EAAW,EACjCE,EAAmB,IAAIC,KAAKJ,EAAMK,cAAcL,EAAMM,WAAaJ,EAAkB,GAEzF,OADAC,EAAiBI,QAASC,KAAKC,IAAIT,EAAMU,UAAWP,EAAiBO,YAC9DP,GAGEQ,EAAiB,SAACC,GAC3B,OAAOA,EAASC,cAAcC,MAAM,EAAE,KAG7BC,EAAQ,SAACC,GACpB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OCXrCI,G,MANC,kBACd,qBAAKpD,UAAU,iBAAiBqD,QAAQ,YAAxC,SACE,wBAAQrD,UAAU,OAAOsD,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAKC,KAAK,OAAOC,YAAY,U,yBCC/DC,GAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAaC,EAAzB,EAAyBA,YAAzB,OAC1BA,EAAW,UACFF,GADE,OACQC,EADR,YACuB,IAAIE,gBAAgBD,IAD3C,UAEFF,GAFE,OAEQC,IAOVG,GAAqB,SAACC,GAC/B,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEpB,MAAM,IAAIC,MAAM,0BCjBPC,GAAa,wCAAG,WAAOC,EAAQC,EAAMC,GAArB,eAAAC,EAAA,6DAEnBC,EAAY,CACdd,QAAS,6BACTC,YAAa,UACbC,YAAa,CACTa,WAAYC,mCACZC,QAASP,EACTQ,UAAWnC,EAAe4B,GAC1BQ,QAASpC,EAAe6B,GACxBQ,MAAO,MAVU,kBAclBC,MAAMtB,GAAee,GAAY,CAAEQ,OAAQ,QAC/CC,KAAKnB,IACLmB,MAAK,SAAAlB,GAAQ,OAAIA,KACjBmB,OAAM,SAAAC,GACHC,QAAQC,MAAMF,OAlBK,2CAAH,0DCHbG,GAAiB,SAACC,GAC7B,OAAOA,GAAgG,KAAjFA,EAAWC,KAAK,GAAGC,MAAMF,EAAWC,KAAKD,EAAWC,KAAK5D,OAAS,GAAG8D,KAAO,ICK9FC,GAAoB,wCAAG,WAAMC,EAAQC,GAAd,eAAAtB,EAAA,sEACVJ,GAAcyB,EAAQC,EAAM,IAAI3D,MADtB,cACvBsD,EADuB,yBAEpBF,GAAeE,IAFK,2CAAH,wDAsCpBM,GAAsB,SAACpH,EAASqH,GACpC,IAAIC,EAEJ,OADAtH,EAAQuH,SAAQ,SAAAC,GAAY,OAAIA,EAAatF,QAAUmF,EAAcC,EAAwBE,EAAe,QACrGF,GCMMG,I,MA9CS,WACtB,IAAMnG,EAAOC,cACPC,EAAWC,cACXZ,EAAegB,aAAY,SAAAxC,GAAK,OAAIA,EAAMwB,gBAOhD,OALA6G,qBAAU,WDsCwB,IAAC1H,ECrC9Ba,EAAab,QAAQkD,SAAWF,OAAOC,KAAKpC,EAAad,SAASmD,QACnE1B,GDoC+BxB,ECpCDa,EAAab,QDoCA,SAAAwB,GAC/C,IAAMmG,EAAKP,GAAoBpH,EAASL,GAClCiI,EAAOR,GAAoBpH,EAASL,GACpCkI,EAAOT,GAAoBpH,EAASL,GACpCmI,EAAOV,GAAoBpH,EAASL,GAEtCoI,EAA4BJ,EAAGK,IAAMJ,EAAKI,IAAML,EAAKC,EACrDK,EAA2BJ,EAAKG,IAAMF,EAAKE,IAAMH,EAAOC,EAE5DC,EAA0BC,IAAM,EAC5BxG,EAASd,EAAiBqH,IAC1BvG,EAASd,EAAiBuH,SC9C3B,CAACpH,EAAab,QAASwB,EAAUX,EAAad,QAASc,EAAad,QAAQmD,SAG7E,sBAAK9B,UAAU,oBAAf,UACE,kCACE,gCACA,+BACE,uCACA,uDACA,wDACA,wDACA,wDACA,8CAGF,gCACEP,EAAab,SAAWa,EAAab,QAAQiC,KAAI,SAAAiG,GACjD,OAAO,+BACL,6BAAK5G,EAAKa,cAAc,CAACC,GAAI,UAAY8F,EAAchG,UACvD,6BAAKgG,EAAchB,SACnB,+BAAKgB,EAAc,GAAGC,QAAQ,GAA9B,QACA,+BAAKD,EAAc,GAAGC,QAAQ,GAA9B,QACA,+BAAKD,EAAc,GAAGC,QAAQ,GAA9B,QACA,+BAAKD,EAAcF,IAAIG,QAAQ,GAA/B,UANcD,EAAchG,eAWlC,4DACGrB,EAAaZ,cACV,8BAAIqB,EAAKa,cAAc,CAACC,GAAI,UAAYvB,EAAaZ,cAAciC,QAAnE,KAA8ErB,EAAaZ,cAAciH,OAAzG,OACA,cAAC,EAAD,YC/BGkB,GAXO,WAGpB,OAFiBvG,aAAY,SAAAxC,GAAK,OAAIA,EAAMwB,aAAaf,aAGvD,KAAKJ,EACH,OAAO,cAAC,GAAD,IACT,QACE,OAAO,uDC4BE2I,GA9BQ,WACnB,IAAM7G,EAAWC,cACXZ,EAAegB,aAAY,SAAAxC,GAAK,OAAIA,EAAMwB,gBAE1CyH,EAAsB,WAC1B9G,EAASf,KACTe,EHJwB,SAACX,GAAD,OAAkB,SAAAW,GAE9C,IAAM+G,EAAcpF,EAAoB,IAAIK,KAAQ,GAC9CgF,EAAgBrF,EAAoB,IAAIK,KAAO,GAC/CiF,EAAYtF,EAAoB,IAAIK,KAAO,GAEjD5D,EAAWoC,IAAInB,EAAaf,UAAUyH,QAAtC,wCAA8C,WAAMrF,GAAN,qBAAA2D,EAAA,6DAEtCqB,EAASrG,EAAad,QAAQmC,GAFQ,SAGtCiC,EAAM,KAHgC,uBAKd8C,GAAqBC,EAAQqB,GALf,cAKtCG,EALsC,gBAMtCvE,EAAM,KANgC,wBAQZ8C,GAAqBC,EAAQsB,GARjB,eAQtCG,EARsC,iBAStCxE,EAAM,KATgC,yBAWhB8C,GAAqBC,EAAQuB,GAXb,eAWtCG,EAXsC,iBAYtCzE,EAAM,KAZgC,QAgB5C3C,EAAShB,EAAgB,CACvB0B,QACAgF,SACAc,KALWU,EAAkBC,EAAoBC,GAAiB,EAMlEC,EAAGD,EACHE,EAAGH,EACHI,EAAGL,KAtBuC,4CAA9C,wDGFaM,CAAenI,KAG1B,OACI,qBAAKO,UAAU,kBAAf,SACK0B,EAAgBjC,EAAad,SAC1B,8FACA+C,EAAgBjC,EAAab,WAAaa,EAAaV,OACvD,wBAAQ8I,QAAS,kBAAMX,KAAvB,8BAEF,qBAAKlH,UAAU,mBAAf,SACIP,EAAaV,SAAWC,EACxB,cAAC,EAAD,IACES,EAAaV,SAAWC,EAC1B,+IAEA,cAAC,GAAD,SCrBH8I,I,MAPA,WACX,OACI,yBAAS9H,UAAU,SAAnB,SACI,4BAAG,sJCcA+H,OAff,WACI,OACI,qCACI,0BAAS/H,UAAU,UAAnB,UACI,wDACA,cAAC,EAAD,IAEA,yCACA,cAAC,GAAD,OAEJ,cAAC,GAAD,Q,uDCsBGgI,I,MA/BW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACT3H,cAA3BC,EADoC,EACpCA,SAAUC,EAD0B,EAC1BA,aAYlB,OACE,qCACE,6FACA,uBAAMR,UAAU,sBAAsBU,SAAUF,GAb5B,SAACG,GACvB0D,GAAc1D,EAAMmF,OAAQ,IAAI1D,KAAKzB,EAAMoF,MAAO,IAAI3D,MACnD+C,MAAK,SAAAlB,GAAQ,OAAIgE,EAAW,CACzBC,MAAOjE,EAASyB,KAAKzB,EAASyB,KAAK5D,OAAS,GAC5CqG,KAAMlE,EAASyB,KAAK,GACpB0C,YAAa5C,GAAevB,WAQhC,UACE,2CAEE,uBAAOhD,KAAK,OAAOpD,KAAK,SAASqD,YAAY,MAAMC,IAAKZ,EAAS,CAAEa,UAAU,SAE/E,mEAEE,uBAAOH,KAAK,OAAOpD,KAAK,OAAOqD,YAAY,MAAMC,IAAKZ,EAAS,CAAEa,UAAU,SAE7E,wBAAQH,KAAK,SAAb,6BCcOoH,I,MA1CoB,SAAC,GAAe,IAAdzJ,EAAa,EAAbA,QACnC,OACE,sBAAKoB,UAAU,+BAAf,UACE,8CACA,kCACE,gCACE,+BACE,sCACA,wCACA,2CACA,2CACA,8CACA,8CACA,6CAGJ,kCACE,+BACE,6BAAK,IAAIoC,KAAKxD,EAAQsJ,MAAMnC,MAAMuC,iBAClC,6BAAK1J,EAAQsJ,MAAM5D,SACnB,6BAAK1F,EAAQsJ,MAAMtC,OACnB,6BAAKhH,EAAQsJ,MAAMvC,QACnB,6BAAK/G,EAAQsJ,MAAMK,OACnB,6BAAK3J,EAAQsJ,MAAMM,MACnB,6BAAK5J,EAAQsJ,MAAMO,YAErB,+BACE,6BAAK,IAAIrG,KAAKxD,EAAQuJ,KAAKpC,MAAMuC,iBACjC,6BAAK1J,EAAQuJ,KAAK7D,SAClB,6BAAK1F,EAAQuJ,KAAKvC,OAClB,6BAAKhH,EAAQuJ,KAAKxC,QAClB,6BAAK/G,EAAQuJ,KAAKI,OAClB,6BAAK3J,EAAQuJ,KAAKK,MAClB,6BAAK5J,EAAQuJ,KAAKM,kBAIxB,gDAAmB7J,EAAQwJ,YAAYrB,QAAQ,GAA/C,aCtBS2B,GAbO,WAAO,IAAD,EACIC,qBADJ,oBACnB/J,EADmB,KACVqJ,EADU,KAG1B,OACE,0BAASjI,UAAU,UAAnB,UACE,cAAC,EAAD,CAAcF,OAAQ,EAAtB,SACE,cAAC,GAAD,CAAmBmI,WAAYA,MAE/BrJ,EAAU,cAAC,GAAD,CAA4BA,QAASA,IAAa,iC,MCcrDgK,OAvBf,WACE,OACE,mCACE,sBAAK5I,UAAU,iBAAf,UACE,cAAC,KAAD,CAAMwE,GAAG,IAAT,SACE,qBAAMqE,IAAI,iBAAiBC,IAAI,uJAEjC,sDAEF,8BACE,+BACE,6BACE,cAAC,KAAD,CAAMtE,GAAG,IAAT,SAAa,yCAEf,6BACE,cAAC,KAAD,CAAMA,GAAG,YAAT,SAAqB,4DC8BlBuE,GAnCH,WAER,IAAM5K,EAAWsC,aAAY,SAAAxC,GAAK,OAAIA,EAAM0B,aAAaxB,YACnDiC,EAAWC,cAMjB,OAJAiG,qBAAU,WACNlG,GChB8B,SAAAA,GAClC,OAAO6E,MAAM,GAAD,OAAI+D,OAAOC,SAASC,KAApB,2BAAmD,CAC3DC,QAAS,CACL,eAAgB,mBAChBC,OAAQ,sBAGfjE,KAAKnB,IACLmB,MAAK,SAACO,GAAD,OAAUtF,EAASpC,EAAgBqL,KAAQ3D,aDS9C,CAACtF,IAGF,mCACIjC,EACI,cAAC,KAAD,CAAcA,SAAUA,EAAUmL,OAAO,KAAKC,cAAc,KAA5D,SACE,cAAC,KAAD,UACE,gCACE,cAAC,GAAD,IAEA,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,KAAK,YAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,gBAOV,cAAC,EAAD,OEnCRC,I,MAAQC,YAAe,CACzBC,QAASpK,EACTqK,UAAU,KAGdC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJM,SAASC,eAAe,W","file":"static/js/main.53e15c60.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst translationsSlice = createSlice({\n    name: 'Translations',\n    initialState: {},\n    reducers: {\n        setTranslations(state, action) {\n            return {...state, messages: action.payload}\n        },\n    }\n})\n\nexport const {\n    setTranslations\n} = translationsSlice.actions;\nexport default translationsSlice.reducer;\n","export const STRATEGY_TYPE = {\n  DMA: \"DMA\",\n  PAPA_BEAR: \"Papa bear\",\n  MAMA_BEAR: \"Mama bear\",\n  RP: \"RP\"\n}\n\nexport const ASSET_TYPE = {\n  COMMODIITES: \"COMMODIITES\",\n  REAL_ESTATE: \"REAL_ESTATE\",\n  GOLD: \"GOLD\",\n  US_STOCKS: \"US_STOCKS\",\n  EX_US_STOCKS: \"EX_US_STOCKS\",\n  LARGE_CAP_STOCKS: \"LARGE_CAP_STOCKS\",\n  LARGE_CAP_VALUES_STOCKS: \"LARGE_CAP_VALUES_STOCKS\",\n  LARGE_CAP_GROWTH_STOCKS: \"LARGE_CAP_GROWTH_STOCKS\",\n  SMALL_CAP_STOCKS: \"SMALL_CAP_STOCKS\",\n  SMALL_CAP_VALUES_STOCKS: \"SMALL_CAP_VALUES_STOCKS\",\n  SMALL_CAP_GROWTH_STOCKS: \"SMALL_CAP_GROWTH_STOCKS\",\n  DEVELOPED_MARKETS_STOCKS: \"DEVELOPED_MARKETS_STOCKS\",\n  EMERGING_MARKETS_STOCKS: \"EMERGING_MARKETS_STOCKS\",\n  LONG_TERM_BONDS: \"LONG_TERM_BONDS\",\n  LONG_TERM_BONDS_EXTENDED: \"LONG_TERM_BONDS_EXTENDED\",\n  MID_TERM_BONDS: \"MID_TERM_BONDS\",\n  SHORT_TERM_BONDS: \"SHORT_TERM_BONDS\",\n  CORPORATE_BONDS: \"CORPORATE_BONDS\",\n  HIGH_YIELD_BONDS: \"HIGH_YIELD_BONDS\",\n  TIPS: \"TIPS\"\n}\n\nexport const Strategies = new Map([\n  [STRATEGY_TYPE.DMA , [\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.EX_US_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.TIPS,\n  ]],\n  [STRATEGY_TYPE.PAPA_BEAR, [\n    ASSET_TYPE.COMMODIITES,\n    ASSET_TYPE.REAL_ESTATE,\n    ASSET_TYPE.GOLD,\n    ASSET_TYPE.LARGE_CAP_VALUES_STOCKS,\n    ASSET_TYPE.LARGE_CAP_GROWTH_STOCKS,\n    ASSET_TYPE.SMALL_CAP_VALUES_STOCKS,\n    ASSET_TYPE.SMALL_CAP_GROWTH_STOCKS,\n    ASSET_TYPE.DEVELOPED_MARKETS_STOCKS,\n    ASSET_TYPE.EMERGING_MARKETS_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.LONG_TERM_BONDS_EXTENDED,\n    ASSET_TYPE.MID_TERM_BONDS,\n    ASSET_TYPE.CORPORATE_BONDS\n  ]],\n  [STRATEGY_TYPE.MAMA_BEAR , [\n    ASSET_TYPE.LARGE_CAP_STOCKS,\n    ASSET_TYPE.SMALL_CAP_STOCKS,\n    ASSET_TYPE.DEVELOPED_MARKETS_STOCKS,\n    ASSET_TYPE.REAL_ESTATE,\n    ASSET_TYPE.COMMODIITES,\n    ASSET_TYPE.GOLD,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.SHORT_TERM_BONDS,\n    ASSET_TYPE.EMERGING_MARKETS_STOCKS,\n  ]],\n  [STRATEGY_TYPE.RP , [\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.US_STOCKS,\n    ASSET_TYPE.LONG_TERM_BONDS,\n    ASSET_TYPE.HIGH_YIELD_BONDS,\n  ]]\n]);\n\nexport const initialState = {\n  strategy: STRATEGY_TYPE.DMA,\n  tickers: {},\n  analyse: [],\n  preconisation : undefined,\n  status: undefined\n}\n","export const STATUS = {\n  DONE: 'STATUS/DONE',\n  ERROR: 'STATUS/ERROR',\n  LOADING: 'STATUS/LOADING'\n}\n","import {createSlice} from \"@reduxjs/toolkit\";\nimport {initialState} from \"./strategySlice.service\";\nimport {STATUS} from \"../../utils/status\";\n\nconst userStrategySlice = createSlice({\n  name: 'UserStrategy',\n  initialState: initialState,\n  reducers: {\n    changeSelectedStrategy(state, action) {\n      return {...state, strategy: action.payload}\n    },\n    addSelection(state, action) {\n      return {...state, tickers: {...action.payload}}\n    },\n    addAssetAnalyse(state, action) {\n      return {...state, analyse: [ ...state.analyse, {...action.payload}], status: STATUS.DONE}\n    },\n    setAnalyseLoading(state) {\n      return {...state, status: STATUS.LOADING}\n    },\n    setPreconisation(state, action) {\n      return {...state, preconisation: action.payload}\n    }\n  }\n})\n\nexport const {\n  addSelection,\n  changeSelectedStrategy,\n  addAssetAnalyse,\n  setAnalyseLoading,\n  setPreconisation\n} = userStrategySlice.actions;\nexport default userStrategySlice.reducer;\n","import {combineReducers} from '@reduxjs/toolkit'\nimport translationsReducer from \"./translations/translationsSlice\";\nimport userStrategyReducer from \"./strategy/strategySlice\";\n\nconst rootReducer = combineReducers({\n    userStrategy: userStrategyReducer,\n    translations: translationsReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport './NumberedCard.style.scss'\n\nconst NumberedCard = ({number, children}) => {\n    return (\n        <div className='numbered-card'>\n            <section className='number'>{number}</section>\n            <section>{children}</section>\n        </div>\n    );\n}\n\nexport default NumberedCard;\n","import React from \"react\";\nimport {Strategies} from \"../../../../store/strategy/strategySlice.service\";\nimport {useIntl} from \"react-intl\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useForm} from \"react-hook-form\";\nimport {addSelection} from \"../../../../store/strategy/strategySlice\";\nimport './TickersForm.style.scss'\n\nconst TickersForm = () => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const { register, handleSubmit } = useForm();\n    const userStrategy = useSelector(state => state.userStrategy)\n\n    const handleAddTicker = (event) => {\n        dispatch(addSelection(event));\n    }\n    return (\n        <form className='tickers-form' onSubmit={handleSubmit(handleAddTicker)}>\n            <h3>J'ajoute mes tickers en fonction de ma stratégie</h3>\n            <div className=\"tickers\">\n                {Strategies.get(userStrategy.strategy + '')?.map(asset => {\n                    return <div key={asset}>\n                        <p>{intl.formatMessage({id: \"ASSETS.\" + asset})}</p>\n                        <input type=\"text\" name={asset + ''} placeholder='SPY' ref={register({ required: true })}/>\n                    </div>\n                })}\n            </div>\n            <button type='submit'>Valider</button>\n        </form>\n    )\n}\n\nexport default TickersForm;\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NumberedCard from '../../../components/NumberedCard';\nimport {changeSelectedStrategy} from \"../../../store/strategy/strategySlice\";\nimport {STRATEGY_TYPE} from \"../../../store/strategy/strategySlice.service\";\nimport TickersForm from './TickersForm';\nimport './AssetsSelector.style.scss'\n\nconst AssetsSelector = () => {\n    const dispatch = useDispatch();\n    const userStrategy = useSelector((state) => state.userStrategy)\n\n    const handleStrategyChange = (event) => {\n        dispatch(changeSelectedStrategy(event.target.value))\n    }\n\n    return (\n        <div className=\"assets-selector\">\n            <NumberedCard number={1}>\n                <h3>Je selectionne ma stratégie</h3>\n                <select name='stategy' value={userStrategy.strategy + ''} onChange={(e) => handleStrategyChange(e)}>\n                    <option value={STRATEGY_TYPE.DMA}>{STRATEGY_TYPE.DMA}</option>\n                    <option value={STRATEGY_TYPE.PAPA_BEAR}>{STRATEGY_TYPE.PAPA_BEAR}</option>\n                    <option value={STRATEGY_TYPE.MAMA_BEAR}>{STRATEGY_TYPE.MAMA_BEAR}</option>\n                    <option value={STRATEGY_TYPE.RP}>{STRATEGY_TYPE.RP}</option>\n                </select>\n            </NumberedCard>\n\n            <NumberedCard number={2}>\n                <TickersForm />\n            </NumberedCard>\n\n            {/*<Tickers values={userStrategy.tickers}/>*/}\n        </div>\n    );\n}\n\nexport default AssetsSelector;\n","export const clearForm = () => {\n    document.getElementsByTagName(\"form\")[0].reset();\n}\n\nexport const isAnEmptyObject = (obj) => {\n    return obj && Object.keys(obj).length === 0;\n}\n\nexport const getDateWithMonthAgo = (today, monthAgo) => {\n    const monthsToSubstract = monthAgo - 1;\n    let dateWithMonthAgo = new Date(today.getFullYear(),today.getMonth() - monthsToSubstract,0);\n    dateWithMonthAgo.setDate( Math.min(today.getDate(), dateWithMonthAgo.getDate()) );\n    return dateWithMonthAgo;\n}\n\nexport const dateTimeToDate = (dateTime) => {\n    return dateTime.toISOString().slice(0,10);\n}\n\nexport const sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n}\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <svg className=\"styled-spinner\" viewBox=\"0 0 50 50\">\n    <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"4\" />\n  </svg>\n);\n\nexport default Spinner;\n","/**\n * Recovery of basic data for the construction of an url with the base, the endpoint and the parameters if necessary,\n * it returns a usable url for API calls.\n * @param {URLConfig} urlConfig - The URL configuration object\n * @returns {string} - The URL built\n */\nexport const urlConstructor = ({ baseUrl, apiEndpoint, queryParams }: any) =>\n    queryParams\n        ? `${baseUrl}${apiEndpoint}?${new URLSearchParams(queryParams)}`\n        : `${baseUrl}${apiEndpoint}`;\n\n/**\n * It is used to handle JSON Response.\n * @param {object} response - The response\n * @returns {object} - The JSON content or throw an error if it's not OK.\n */\nexport const handleJSONResponse = (response: any) => {\n    if (response.ok) {\n        return response.json();\n    }\n    throw new Error('Something went wrong.');\n};\n","import {handleJSONResponse, urlConstructor} from \"../../../utils/fetch\";\nimport {dateTimeToDate} from \"../../../utils/functions\";\n\nexport const getMarketData = async (symbol, from, to) => {\n\n    const urlConfig = {\n        baseUrl: 'http://api.marketstack.com',\n        apiEndpoint: '/v1/eod',\n        queryParams: {\n            access_key: process.env.REACT_APP_MARKETSTACK_ACCESS_KEY,\n            symbols: symbol,\n            date_from: dateTimeToDate(from),\n            date_to: dateTimeToDate(to),\n            limit: 150\n        },\n    };\n\n    return fetch(urlConstructor(urlConfig), { method: \"GET\" })\n      .then(handleJSONResponse)\n      .then(response => response)\n      .catch(err => {\n          console.error(err);\n      });\n}\n","export const getPerformance = (marketData) => {\n  return marketData && (marketData.data[1].close/marketData.data[marketData.data.length - 1].open - 1) * 100\n}\n","import {getDateWithMonthAgo, sleep} from \"../../../utils/functions\";\nimport {getMarketData} from \"../../apis/marketstack\";\nimport {getPerformance} from \"../../mappers/marketstack\";\nimport {ASSET_TYPE, Strategies} from \"../../../store/strategy/strategySlice.service\";\nimport {addAssetAnalyse, setPreconisation} from \"../../../store/strategy/strategySlice\";\n\nconst getTickerPerformance = async(ticker, date) => {\n  let data = await getMarketData(ticker, date, new Date());\n  return getPerformance(data);\n}\n\nexport const loadDMAAnalyse = (userStrategy) => dispatch => {\n\n  const sixMonthAgo = getDateWithMonthAgo(new Date(), 6);\n  const threeMonthAgo = getDateWithMonthAgo(new Date(),3);\n  const aMonthAgo = getDateWithMonthAgo(new Date(),1);\n\n  Strategies.get(userStrategy.strategy).forEach(async asset => {\n\n    const ticker = userStrategy.tickers[asset];\n    await sleep(2000);\n\n    const sixMonthAgoPerf = await getTickerPerformance(ticker, sixMonthAgo)\n    await sleep(2000);\n\n    const threeMonthAgoPerf = await getTickerPerformance(ticker, threeMonthAgo)\n    await sleep(2000);\n\n    const aMonthAgoPerf = await getTickerPerformance(ticker, aMonthAgo)\n    await sleep(2000);\n\n    const avg = (sixMonthAgoPerf + threeMonthAgoPerf + aMonthAgoPerf) / 3;\n\n    dispatch(addAssetAnalyse({\n      asset,\n      ticker,\n      avg,\n      1: aMonthAgoPerf,\n      3: threeMonthAgoPerf,\n      6: sixMonthAgoPerf\n    }))\n  })\n}\n\nconst getAssetWithAnalyse = (analyse, assetToFind) => {\n  let assetWithInformations;\n  analyse.forEach(assetAnalyse => assetAnalyse.asset === assetToFind ? assetWithInformations = assetAnalyse : null)\n  return assetWithInformations;\n}\n\nexport const loadDmaPreconisation = (analyse) => dispatch => {\n  const us = getAssetWithAnalyse(analyse, ASSET_TYPE.US_STOCKS)\n  const exUs = getAssetWithAnalyse(analyse, ASSET_TYPE.EX_US_STOCKS)\n  const bond = getAssetWithAnalyse(analyse, ASSET_TYPE.LONG_TERM_BONDS)\n  const tips = getAssetWithAnalyse(analyse, ASSET_TYPE.TIPS)\n\n  let mostInterestingStockAsset = us.avg > exUs.avg ? us : exUs;\n  let mostInterestingSafeAsset = bond.avg > tips.avg ? bond : tips;\n\n  mostInterestingStockAsset.avg > 0\n    ? dispatch(setPreconisation(mostInterestingStockAsset))\n    : dispatch(setPreconisation(mostInterestingSafeAsset))\n}\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useIntl} from \"react-intl\";\nimport {loadDmaPreconisation} from \"../../../../../services/domain/analyse\";\nimport Spinner from \"../../../../../components/Spinner\";\nimport './DmaReportViewer.style.scss'\n\nconst DmaReportViewer = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const userStrategy = useSelector(state => state.userStrategy)\n\n  useEffect(() => {\n    if(userStrategy.analyse.length === Object.keys(userStrategy.tickers).length)\n      dispatch(loadDmaPreconisation(userStrategy.analyse));\n  }, [userStrategy.analyse, dispatch, userStrategy.tickers, userStrategy.tickers.length])\n\n  return (\n    <div className='dma-report-viewer'>\n      <table>\n        <thead>\n        <tr>\n          <th>Asset</th>\n          <th>Ticker selectionné</th>\n          <th>Performance sur 1 mois</th>\n          <th>Performance sur 3 mois</th>\n          <th>Performance sur 6 mois</th>\n          <th>Moyenne</th>\n        </tr>\n        </thead>\n        <tbody>\n        { userStrategy.analyse && userStrategy.analyse.map(assetElements => {\n          return <tr key={assetElements.asset}>\n            <td>{intl.formatMessage({id: \"ASSETS.\" + assetElements.asset})}</td>\n            <td>{assetElements.ticker}</td>\n            <td>{assetElements[1].toFixed(2)} %</td>\n            <td>{assetElements[3].toFixed(2)} %</td>\n            <td>{assetElements[6].toFixed(2)} %</td>\n            <td>{assetElements.avg.toFixed(2)} %</td>\n          </tr>\n        })}\n        </tbody>\n      </table>\n      <h3>Préconisation d'achat :\n        {userStrategy.preconisation\n          ? <p>{intl.formatMessage({id: \"ASSETS.\" + userStrategy.preconisation.asset})} ({userStrategy.preconisation.ticker})</p>\n          : <Spinner />\n        }\n      </h3>\n    </div>\n  );\n};\n\nexport default DmaReportViewer;\n","import {useSelector} from \"react-redux\";\nimport {STRATEGY_TYPE} from \"../../../../store/strategy/strategySlice.service\";\nimport DmaReportViewer from './DmaReportViewer'\n\nconst AnalyseViewer = () => {\n  const strategy = useSelector(state => state.userStrategy.strategy)\n\n  switch (strategy) {\n    case STRATEGY_TYPE.DMA:\n      return <DmaReportViewer />\n    default:\n      return <p>Statégie inconnue</p>\n  }\n}\n\nexport default AnalyseViewer;\n","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {setAnalyseLoading} from '../../../store/strategy/strategySlice';\nimport {isAnEmptyObject} from \"../../../utils/functions\";\nimport {STATUS} from \"../../../utils/status\";\nimport Spinner from \"../../../components/Spinner\";\nimport AnalyseViewer from \"./AnalyseViewer\";\nimport {loadDMAAnalyse} from \"../../../services/domain/analyse\";\n\nconst AssetsAnalyzer = () => {\n    const dispatch = useDispatch();\n    const userStrategy = useSelector(state => state.userStrategy);\n\n    const handleLaunchAnalyse = () => {\n      dispatch(setAnalyseLoading());\n      dispatch(loadDMAAnalyse(userStrategy));\n    }\n\n    return (\n        <div className=\"assets-analyzer\">\n            {isAnEmptyObject(userStrategy.tickers) ? (\n                <p>Veuillez selectionner une stratégie et saisir les tickers.</p>\n            ) : isAnEmptyObject(userStrategy.analyse) && !userStrategy.status ? (\n                <button onClick={() => handleLaunchAnalyse()}>Lancer l'analyse</button>\n            ) : (\n              <div className='max-width-center'>\n                { userStrategy.status === STATUS.LOADING ? (\n                  <Spinner />\n                ) : userStrategy.status === STATUS.ERROR ? (\n                  <p>Désolé nous ne prennons pas encore en compte cette stratégie ou une erreur a été rencontrée.</p>\n                ) : (\n                  <AnalyseViewer />\n                )}\n              </div>\n            )}\n        </div>\n    );\n}\n\nexport default AssetsAnalyzer;\n","import React from \"react\";\nimport './Footer.style.scss'\n\nconst Footer = () => {\n    return (\n        <section className=\"footer\">\n            <p><i>Attention, il ne s'agit pas de conseils d'achats. Cet outil te permet d'avoir une lecture rapide des momentums.</i></p>\n        </section>\n    )\n}\nexport default Footer;\n","import React from 'react';\nimport AssetsSelector from \"../../containers/Strategy/AssetsSelector\";\nimport AssetsAnalyzer from \"../../containers/Strategy/AssetsAnalyzer\";\nimport Footer from '../../containers/Footer';\n\nfunction Strategy() {\n    return (\n        <>\n            <section className='content'>\n                <h2>Stratégie & Tickers</h2>\n                <AssetsSelector />\n\n                <h2>Analyse</h2>\n                <AssetsAnalyzer />\n            </section>\n            <Footer />\n        </>\n    );\n}\n\nexport default Strategy;\n","import React from 'react';\nimport {useForm} from \"react-hook-form\";\nimport {getMarketData} from \"../../../services/apis/marketstack\";\nimport './TickerAnalyseForm.style.scss'\nimport {getPerformance} from \"../../../services/mappers/marketstack\";\n\nconst TickerAnalyseForm = ({ setAnalyse }) => {\n  const { register, handleSubmit } = useForm();\n\n  const handleAddTicker = (event) => {\n    getMarketData(event.ticker, new Date(event.date), new Date())\n      .then(response => setAnalyse({\n          first: response.data[response.data.length - 1],\n          last: response.data[0],\n          performance: getPerformance(response)\n        }\n      ));\n  }\n\n  return (\n    <>\n      <h3>J'insère les informations du ticker que je veux analyser</h3>\n      <form className='ticker-analyse-form' onSubmit={handleSubmit(handleAddTicker)}>\n        <label>\n          Ticker\n          <input type=\"text\" name='ticker' placeholder='SPY' ref={register({ required: true })}/>\n        </label>\n        <label>\n          Période de stats (Max 4ans)\n          <input type=\"date\" name='date' placeholder='SPY' ref={register({ required: true })}/>\n        </label>\n        <button type='submit'>Valider</button>\n      </form>\n    </>\n  );\n};\n\nexport default TickerAnalyseForm;\n","import React from 'react';\nimport './TickerAnalyseVisualisation.style.scss'\n\nconst TickerAnalyseVisualisation = ({analyse}) => {\n  return (\n    <div className='ticker-analyse-visualisation'>\n      <h3>Résultats</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Ticker</th>\n            <th>Ouverture</th>\n            <th>Fermeture</th>\n            <th>Valeur haute</th>\n            <th>Valeur basse</th>\n            <th>Volume</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{new Date(analyse.first.date).toDateString()}</td>\n            <td>{analyse.first.symbol}</td>\n            <td>{analyse.first.open}</td>\n            <td>{analyse.first.close}</td>\n            <td>{analyse.first.high}</td>\n            <td>{analyse.first.low}</td>\n            <td>{analyse.first.volume}</td>\n          </tr>\n          <tr>\n            <td>{new Date(analyse.last.date).toDateString()}</td>\n            <td>{analyse.last.symbol}</td>\n            <td>{analyse.last.open}</td>\n            <td>{analyse.last.close}</td>\n            <td>{analyse.last.high}</td>\n            <td>{analyse.last.low}</td>\n            <td>{analyse.last.volume}</td>\n          </tr>\n        </tbody>\n      </table>\n      <h4>Performance : {analyse.performance.toFixed(2)} %</h4>\n    </div>\n  );\n};\n\nexport default TickerAnalyseVisualisation;\n","import React, {useState} from 'react';\nimport NumberedCard from \"../../components/NumberedCard\";\nimport TickerAnalyseForm from \"../../containers/TickerAnalyse/TickerAnalyseForm\";\nimport TickerAnalyseVisualisation from \"../../containers/TickerAnalyse/TickerAnalyseVisualisation\";\n\nconst TickerAnalyse = () => {\n  const [analyse, setAnalyse] = useState();\n\n  return (\n    <section className='content'>\n      <NumberedCard number={1}>\n        <TickerAnalyseForm setAnalyse={setAnalyse}/>\n      </NumberedCard>\n      { analyse ? <TickerAnalyseVisualisation analyse={analyse}/> : <></> }\n    </section>\n  );\n};\n\nexport default TickerAnalyse;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './Topbar.style.scss'\n\nfunction Topbar() {\n  return (\n    <header>\n      <div className=\"logo-and-title\">\n        <Link to=\"/\">\n          <img  alt='Bourse Academy' src='https://us.allianzgi.com/-/media/allianzgi/na/us/images/1920x980-momentum-driven-investing-hero.jpg?w=1152&hash=555965964A7131396E7A5885525C8D39'/>\n        </Link>\n        <h1>Momentum Analyzer</h1>\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\"><b>Home</b></Link>\n          </li>\n          <li>\n            <Link to=\"/research\"><b>Ticker analyse</b></Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Topbar;\n","import Strategy from \"./views/Strategy\";\nimport React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {IntlProvider} from \"react-intl\";\nimport {loadTranslations} from \"./utils/translations\";\nimport Spinner from \"./components/Spinner\";\nimport TickerAnalyse from \"./views/TickerAnalyse\";\nimport Topbar from \"./containers/Topbar\";\n\nconst App = () => {\n\n    const messages = useSelector(state => state.translations.messages)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(loadTranslations())\n    }, [dispatch])\n\n    return (\n      <>\n        { messages ? (\n              <IntlProvider messages={messages} locale=\"fr\" defaultLocale=\"fr\">\n                <Router>\n                  <div>\n                    <Topbar />\n\n                    <Switch>\n                      <Route path=\"/research\">\n                        <TickerAnalyse />\n                      </Route>\n                      <Route path=\"/\">\n                        <Strategy />\n                      </Route>\n                    </Switch>\n                  </div>\n                </Router>\n              </IntlProvider>\n        ) : (\n              <Spinner />\n        )}\n      </>\n    )\n}\n\nexport default App;\n","import flatten from 'flat';\nimport { setTranslations } from '../../store/translations/translationsSlice';\nimport {handleJSONResponse} from \"../fetch\";\n\nexport const loadTranslations = () => dispatch => {\n    return fetch(`${window.location.href}/data/translations.json`, {\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        },\n    })\n    .then(handleJSONResponse)\n    .then((data) => dispatch(setTranslations(flatten(data))));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./store\";\nimport App from \"./App\";\nimport './style/style.css';\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: true\n})\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}